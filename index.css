*,
*::after,
*::before {
    box-sizing: border-box;
}

:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * .9);
}

body {
    margin: 0;
}

.gameBoard {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
}

.gameCell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.gameCell:first-child,
.gameCell:nth-child(2),
.gameCell:nth-child(3) {
    border-top: none;
}

.gameCell:nth-child(3n + 1) {
    border-left: none;
}

.gameCell:nth-child(3n + 3) {
    border-right: none;
}

.gameCell:last-child,
.gameCell:nth-child(8),
.gameCell:nth-child(7) {
    border-bottom: none;
}


.gameCell.x,
.gameCell.circle {
    cursor: not-allowed;
}

.gameCell.x::before,
.gameCell.x::after,
.gameCell.circle::before {
    background-color: black;
}


.gameBoard.x .gameCell:not(.x):not(.circle):hover::before,
.gameBoard.x .gameCell:not(.x):not(.circle):hover::after,
.gameBoard.circle .gameCell:not(.x):not(.circle):hover::before {
    background-color: lightgrey;
}


.gameCell.x::before,
.gameBoard.x .gameCell:not(.x):not(.circle):hover::before {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

.gameCell.x::before,
.gameBoard.x .gameCell:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
}


.gameCell.x::after,
.gameBoard.x .gameCell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
    transform: rotate(-45deg);
}

.gameCell.circle::before,
.gameCell.circle::after,
.gameBoard.circle .gameCell:not(.x):not(.circle):hover::before,
.gameBoard.circle .gameCell:not(.x):not(.circle):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
}

.gameCell.circle::before,
.gameBoard.circle .gameCell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}

.gameCell.circle::after,
.gameBoard.circle .gameCell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: white;
}


.resultMessage {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.resultMessage button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.resultMessage button:hover {
    background-color: black;
    color: white;
    border-color: white;
}


.resultMessage.show {
    display: flex;
}


#playerTurn {
    text-align: center;
    font-size: 2rem;
    margin-bottom: 20px;
}


@media only screen and (max-width: 768px) {
    .gameBoard {
        width: 90vw;
        height: 90vw;
    }

    .gameCell {
        width: calc(30vw - 2px);
        height: calc(30vw - 2px);
    }

    #playerTurn {
        font-size: 1.5rem;
    }
}


@media only screen and (max-width: 480px) {
    .gameBoard {
        width: 80vw;
        height: 80vw;
    }

    .gameCell {
        width: calc(26.67vw - 2px);
        height: calc(26.67vw - 2px);
    }

    #playerTurn {
        font-size: 1.2rem;
    }
}